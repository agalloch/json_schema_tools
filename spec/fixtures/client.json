{"type":"object",
  "title": "client",
  "name": "client",
  "description": "A example client.",
  "properties":{
    "id":{
      "description":"Unique identifier - UUID",
      "identity":true,
      "readonly":true,
      "type":"string",
      "maxLength": 22,
      "minLength":22
    },
    "number":{
      "description": "Unique number, auto-created for new client without number.",
      "type":"string",
      "maxLength": 50
    },
    "organisation":{
      "description": "Name of a company. This or lastname must be present",
      "required" : true,
      "type":"string",
      "maxLength": 100
    },
    "last_name":{
      "description": "Last name of a person. At least this or the organisation field must be filled for new records",
      "type":"string",
      "maxLength": 50
    },
    "first_name":{
      "description": "First name of a person.",
      "type":"string",
      "maxLength": 50
    },
    "gender":{
      "description": "Can be empty for a company. Is used in salutation",
      "enum":["male", "female"],
      "type":"string"
    },
    "notes":{
      "description": "Notes for a contact. For day to day information you should use comments instead.",
      "type":"string",
      "format": "text"
    },
    "position":{
      "description": "Position of a person in a company.",
      "type":"string",
      "maxLength": 50
    },
    "title":{
      "description": "Academical title of a person e.g. Dr., Prof",
      "type":"string",
      "maxLength": 50
    },
    "tax_number":{
      "description": "Tax number, normally applies to a private person",
      "type":"string",
      "maxLength": 30
    },
    "vat_number":{
      "description": "VAT number, for a company or person paying value added taxes.",
      "type":"string",
      "maxLength": 30
    },
    "email":{
      "description": "Email address of the contact.",
      "type":"string",
      "maxLength": 100
    },
    "url":{
      "description": "An url associated with the person, e.g its company website.",
      "type":"string",
      "maxLength": 255
    },
    "birthday":{
      "format":"date",
      "type":"string"
    },
    "tag_list":{
      "description": "Space separated list of tags. Are split and saved as Tag objects on create, update.",
      "type":"string"
    },
    "created_at":{
      "description": "Date the record was created in SK. Never changes afterwards.",
      "format":"date-time",
      "readonly":true,
      "type":"string"
    },
    "updated_at":{
      "description": "Last date when the record was edited.",
      "format":"date-time",
      "readonly":true,
      "type":"string"
    },
    "phone_mobile":{
      "description": "Mobile phone number",
      "type":"string",
      "maxLength": 30
    },
    "cash_discount":{
      "description": "Default cash discount for new invoices.",
      "maximum": 100,
      "minimum": 0,
      "type":"number"
    },
    "addresses":{
      "description": "A client can have many addresses, sorted by date descending(new first). Default address is the most recent one.",
      "type":"array",
      "properties" : {"$ref":"./address.json#properties"}
    },
    "work_address":{
      "description": "The work address as an example for a single nested/related object",
      "type":"object",
      "properties" : {"$ref":"./address.json#properties"}
    }
  },
  "links":[
    { "rel": "self",
      "href": "clients/{id}"
    },
    { "rel": "instances",
      "href": "clients",
      "properties" : {
        "page":{
          "title" : "Page",
          "description": "In paginated results set the page to look for",
          "type":"number"
        },
        "per_page":{
          "title" : "Per page",
          "description": "Results per page. Default is 10, max is 100",
          "type":"number"
        },
        "filter[q]":{
          "title" : "Search",
          "description": "Wildcard search in first, last_name, organisation, email, number",
          "type":"string"
        },
        "filter[tags]":{
          "title" : "Tags",
          "description": "Filter by a space delimited list of tags",
          "type":"string"
        },
        "filter[ids]":{
          "title" : "Clients",
          "description": "A single or a list of client uuids, comma separated",
          "type" : "string"
        },
        "filter[created_at_from]":{
          "title" : "From date",
          "description": "Objects with a creation date after the date, including given datetime. ISO 8601 format YYY-MM-DDThh:mm:ss+z",
          "format" : "date-time",
          "type" : "string"
        },
        "filter[created_at_to]":{
          "title" : "To date",
          "description": "Objects with a creation date before the date, including given datetime. ISO 8601 format YYY-MM-DDThh:mm:ss+z",
          "format" : "date-time",
          "type" : "string"
        },
        "filter[birthday_from]":{
          "title" : "From birthday date",
          "description": "Contacts with a birthday after and on the date. Leave the birthday-to date blank to only search on this day.",
          "format" : "date",
          "type" : "string"
        },
        "filter[birthday_to]":{
          "title" : "To birthday date",
          "description": "Contacts with a birthday date before and on the date.",
          "format" : "date",
          "type" : "string"
        },
        "filter[creator_ids]":{
          "title" : "Creator",
          "description": "Objects created by the given users uuids, comma separated",
          "type" : "string"
        },
        "filter[number]":{
          "title" : "By number",
          "description": "Search by number where the number is matched from the start: number%",
          "type" : "string"
        },
        "filter[languages]":{
          "title" : "Languages",
          "description": "A single or a list of language codes, comma separated",
          "type" : "string"
        },
        "sort_by":{
          "title" : "Sort by",
          "description": "Sort the results by the given field => number",
          "enum":["organisation", "number","email","first_name","last_name", "created_at", "updated_at"],
          "type": "string"
        },
        "sort":{
          "title" : "Sort",
          "enum":["ASC","DESC"],
          "description": "Sort the results in ASC or DESC"
        }
      }
    },
    { "rel": "destroy",
      "href": "clients/{id}",
      "method": "DELETE"
    },
    { "rel": "update",
      "href": "clients/{id}",
      "method": "PUT"
    },
    { "rel": "create",
      "href": "clients",
      "method": "POST"
    },
    { "rel": "documents",
      "href": "clients/{id}/documents"
    },
    { "rel": "attachments",
      "href": "clients/{id}/attachments"
    },
    { "rel": "invoices",
      "href": "clients/{id}/invoices"
    },
    { "rel": "estimates",
      "href": "clients/{id}/estimates"
    },
    { "rel": "orders",
      "href": "clients/{id}/orders"
    },
    { "rel": "credit_notes",
      "href": "clients/{id}/credit_notes"
    },
    { "rel": "recurrings",
      "href": "clients/{id}/recurrings"
    },
    { "rel": "payment_reminders",
      "href": "clients/{id}/payment_reminders"
    },
    { "rel": "comments",
      "href": "clients/{id}/comments"
    },
    { "rel": "emails",
      "href": "clients/{id}/emails"
    }
  ]
}